@page "/coin/{symbol}"
@using DarraghConway_CA1.Client.Services
@using DarraghConway_CA1.Client.Models
@inject CryptoPanicService News
@rendermode InteractiveServer

<h3>News for @symbol</h3>

@if (items is null)
{
    <p><em>Loading...</em></p>
}
else if (items.Count == 0)
{
    <p>No recent posts.</p>
}
else
{
    <ul>
        @foreach (var p in items)
        {
            var link =
                p.NewsUrl
                ?? p.Url
                ?? p.Source?.Url
                ?? (p.Id > 0 ? $"https://cryptopanic.com/news/{p.Id}" : null)
                ?? $"https://cryptopanic.com/search/?q={Uri.EscapeDataString(p.Title ?? symbol)}";

            <li>
                <a href="@link"
                   target="_blank"
                   rel="noopener noreferrer"
                   data-blazor-nav="false">
                    @p.Title
                </a>
                <small> — @p.Domain • @p.PublishedAt.ToLocalTime().ToString("dd MMM HH:mm")</small>
            </li>
        }

    </ul>
}

@code {
    [Parameter] public string symbol { get; set; } = string.Empty;
    private List<CryptoPanicPost>? items;

    protected override async Task OnParametersSetAsync()
    {
        items = string.IsNullOrWhiteSpace(symbol)
            ? new()
            : await News.GetPostsForSymbolAsync(symbol.ToUpperInvariant());
    }

    private static string? GetLink(CryptoPanicPost p)
        => p.NewsUrl ?? p.Url ?? p.Source?.Url;
}